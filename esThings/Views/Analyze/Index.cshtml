@using System.Collections
@using esThings.Devices

@model IEnumerable<GarbageCanStatusMessage>

@{
    ViewBag.Title = "Analyze";
    IEnumerable<string> deviceIds = ViewBag.DeviceIds;

    SelectList deviceList = new SelectList(deviceIds, ViewBag.SelectedDevice);
}

<h2>Analyze</h2>

@using (Html.BeginForm("Index", "Analyze", FormMethod.Get))
{
    @Html.DropDownList("DeviceId", deviceList, "All devices", new { onchange = "this.form.submit();" })
}

<table class="table">
    <thead>
    <tr>
        <th>Sent</th>
        <th>MessageId</th>
        <th>DeviceId</th>
        <th>DeviceKey</th>
        <th>Fullness</th>
        <th>Status</th>
    </tr>
    </thead>
    @foreach (GarbageCanStatusMessage status in Model.OrderByDescending(s => s.MessageSentDateTime))
    {
        <tr>
            <td>@status.MessageSentDateTime.ToLocalTime().ToString("G")</td>
            <td>@status.MessageId</td>
            <td>@status.DeviceId</td>
            <td>@status.DeviceKey</td>
            <td>@status.Fullness</td>

            @if (status.IsFull)
            {
                <td class="alert-danger">Full!</td>
            }
            else if (status.IsEmpty)
            {
                <td class="alert-success">Empty</td>
            }
            else
            {
                <td class="alert-info">Ok</td>
            }
        </tr>
    }
</table>

