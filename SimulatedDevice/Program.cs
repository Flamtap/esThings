using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Azure.Devices.Client;
using Newtonsoft.Json;

namespace SimulatedDevice
{
    public class Program
    {
        public static DeviceClient DeviceClient;
        //IoT Hub host name
        public static string IoTHubUri = "esThings.azure-devices.net";
        //Device key generated by CreateDeviceIdentity
        public static string DeviceId = "esDevice";
        public static string DeviceKey = "I15Nn4DW9KAWOqsWh/4+6HxsaWbQn2rQzY8TSBSzYi8=";

        public static void Main(string[] args)
        {
            Console.WriteLine("Starting simulated device...\n");

            DeviceClient = DeviceClient.Create(IoTHubUri, new DeviceAuthenticationWithRegistrySymmetricKey(DeviceId, DeviceKey));

            SendDeviceToCloudMessagesAsync();
            Console.ReadLine();
        }

        private static async void SendDeviceToCloudMessagesAsync()
        {
            const double avgWindSpeed = 10d; //milliseconds
            Random rand = new Random();

            while (true)
            {
                double currentWindSpeed = avgWindSpeed + rand.NextDouble() * 4 - 2;

                var telemetryDataPoint = new {deviceId = DeviceId, windspeed = currentWindSpeed};

                string messageString = JsonConvert.SerializeObject(telemetryDataPoint);
                Message d2CMessage = new Message(Encoding.ASCII.GetBytes(messageString));

                await DeviceClient.SendEventAsync(d2CMessage);
                Console.WriteLine($"{DateTime.Now} > Sending message: {messageString}");

                Task.Delay(1000).Wait();
            }
        }
    }
}
